#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.1 on Thu Mar 11 15:37:21 2021 from "C:\Users\buggr\Documents\VostroDocuments\PythonExercises\pythonnetwork\PythonNetwork\OMNI_Project\rebTest02.wxg"
#

# This is an automatically generated file.
# Manual changes will be overwritten without warning!

# I really like this HTML format for a UI
# https://github.com/Akkadius/glass-isc-dhcp
import wx
from RigControl_2 import RigControl
from myRadio import Radio

class MyApp(wx.App):
    def OnInit(self):
        self.frame = RigControl(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.timer = wx.Timer(self.frame)
        self.frame.timer.Start(1000)
        self.frame.Bind(wx.EVT_TIMER, scheduledRun, self.frame.timer)
        self.frame.Show()
        return True

# end of class MyApp

def updatePanel():
    app.frame.freq_active_freq.SetValue(str(rig.vfoA))
    app.frame.freq_standby_freq.SetValue(str(rig.vfoB))
    
    app.frame.select_agc.SetValue( str(rig.agc))
    
    app.frame.af_level.SetValue( int(rig.volume * 100))
    print("RIG:", rig.power)
    app.frame.power_level.SetValue( rig.power )
    if rig.strength.get('swr', None) != None:
        app.frame.swr_level.SetValue ( rig.strength['swr'] )
    if rig.strength.get('dbS9rel', None) != None:
        app.frame.s_meter_level.SetValue ( rig.strength['dbS9rel'] )

    if rig.radio_mode['vfoA_mode'] == "AM":
        app.frame.mode_am.SetValue(True)
        app.frame.mode_usb.SetValue(False)
        app.frame.mode_lsb.SetValue(False)
        app.frame.mode_cw.SetValue(False)
        app.frame.mode_fm.SetValue(False)
        app.frame.mode_cwr.SetValue(False)
    elif rig.radio_mode['vfoA_mode'] == "USB":
        app.frame.mode_am.SetValue(False)
        app.frame.mode_usb.SetValue(True)
        app.frame.mode_lsb.SetValue(False)
        app.frame.mode_cw.SetValue(False)
        app.frame.mode_fm.SetValue(False)
        app.frame.mode_cwr.SetValue(False)


def scheduledRun(e):
    print("DEBUG: %s" % repr(e))
    rig.updateSettings()
    updatePanel()

if __name__ == "__main__":
    rig = Radio(hostname="k8hsq.no-ip.biz", port=50020)

    app = MyApp(0)
    try:
        app.MainLoop()
    except Exception as e:
        print("Fini: %s" % str(e))
    finally:
        pass